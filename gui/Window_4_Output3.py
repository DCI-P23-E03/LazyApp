# Form implementation generated from reading ui file 'Window_4_Output3.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow4_Output(object):
    def setupUi(self, MainWindow4_Output):
        MainWindow4_Output.setObjectName("MainWindow4_Output")
        MainWindow4_Output.resize(1000, 800)
        MainWindow4_Output.setAutoFillBackground(False)
        MainWindow4_Output.setStyleSheet("\n"
"background-color: rgb(202, 112, 217);")
        MainWindow4_Output.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow4_Output)
        self.centralwidget.setObjectName("centralwidget")
        self.textBrowser_Window4_Output = QtWidgets.QTextBrowser(parent=self.centralwidget)
        self.textBrowser_Window4_Output.setGeometry(QtCore.QRect(30, 40, 961, 111))
        self.textBrowser_Window4_Output.setObjectName("textBrowser_Window4_Output")
        self.radioButton_Application_letter = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_Application_letter.setGeometry(QtCore.QRect(100, 200, 150, 30))
        font = QtGui.QFont()
        font.setBold(True)
        self.radioButton_Application_letter.setFont(font)
        self.radioButton_Application_letter.setStyleSheet("background-color: rgb(145, 65, 172);")
        self.radioButton_Application_letter.setObjectName("radioButton_Application_letter")
        self.radioButton_Cheat_Sheet = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_Cheat_Sheet.setGeometry(QtCore.QRect(100, 350, 150, 31))
        font = QtGui.QFont()
        font.setBold(True)
        self.radioButton_Cheat_Sheet.setFont(font)
        self.radioButton_Cheat_Sheet.setStyleSheet("background-color: rgb(129, 61, 156);")
        self.radioButton_Cheat_Sheet.setObjectName("radioButton_Cheat_Sheet")
        self.radioButton_CV_improvements = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_CV_improvements.setGeometry(QtCore.QRect(100, 500, 150, 30))
        font = QtGui.QFont()
        font.setBold(True)
        self.radioButton_CV_improvements.setFont(font)
        self.radioButton_CV_improvements.setStyleSheet("background-color: rgb(97, 53, 131);")
        self.radioButton_CV_improvements.setObjectName("radioButton_CV_improvements")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(600, 700, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_Ba = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Ba.setGeometry(QtCore.QRect(310, 700, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        self.pushButton_Ba.setFont(font)
        self.pushButton_Ba.setObjectName("pushButton_Ba")
        self.textBrowser_Application_Letter = QtWidgets.QTextBrowser(parent=self.centralwidget)
        self.textBrowser_Application_Letter.setGeometry(QtCore.QRect(450, 200, 491, 131))
        font = QtGui.QFont()
        font.setBold(True)
        self.textBrowser_Application_Letter.setFont(font)
        self.textBrowser_Application_Letter.setObjectName("textBrowser_Application_Letter")
        self.textBrowser_Cheat_Sheet = QtWidgets.QTextBrowser(parent=self.centralwidget)
        self.textBrowser_Cheat_Sheet.setGeometry(QtCore.QRect(450, 350, 491, 131))
        font = QtGui.QFont()
        font.setBold(True)
        self.textBrowser_Cheat_Sheet.setFont(font)
        self.textBrowser_Cheat_Sheet.setObjectName("textBrowser_Cheat_Sheet")
        self.textBrowser_CV_Improvements = QtWidgets.QTextBrowser(parent=self.centralwidget)
        self.textBrowser_CV_Improvements.setGeometry(QtCore.QRect(450, 500, 491, 131))
        font = QtGui.QFont()
        font.setBold(True)
        self.textBrowser_CV_Improvements.setFont(font)
        self.textBrowser_CV_Improvements.setObjectName("textBrowser_CV_Improvements")
        self.checkBox_Application_letter = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.checkBox_Application_letter.setGeometry(QtCore.QRect(100, 260, 150, 30))
        self.checkBox_Application_letter.setObjectName("checkBox_Application_letter")
        self.checkBox_Cheat_Sheet = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.checkBox_Cheat_Sheet.setGeometry(QtCore.QRect(100, 420, 150, 30))
        self.checkBox_Cheat_Sheet.setObjectName("checkBox_Cheat_Sheet")
        self.checkBox_CV_Improvements = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.checkBox_CV_Improvements.setGeometry(QtCore.QRect(100, 570, 150, 30))
        self.checkBox_CV_Improvements.setObjectName("checkBox_CV_Improvements")
        MainWindow4_Output.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow4_Output)
        self.statusbar.setObjectName("statusbar")
        MainWindow4_Output.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow4_Output)
        QtCore.QMetaObject.connectSlotsByName(MainWindow4_Output)

    def retranslateUi(self, MainWindow4_Output):
        _translate = QtCore.QCoreApplication.translate
        MainWindow4_Output.setWindowTitle(_translate("MainWindow4_Output", "Output"))
        self.textBrowser_Window4_Output.setHtml(_translate("MainWindow4_Output", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:48pt; font-weight:700;\">What do you need today?</span></p></body></html>"))
        self.radioButton_Application_letter.setText(_translate("MainWindow4_Output", "Application letter"))
        self.radioButton_Cheat_Sheet.setText(_translate("MainWindow4_Output", "Cheat Sheet"))
        self.radioButton_CV_improvements.setText(_translate("MainWindow4_Output", "CV Improvements"))
        self.pushButton.setText(_translate("MainWindow4_Output", "Next"))
        self.pushButton_Ba.setText(_translate("MainWindow4_Output", "Back"))
        self.textBrowser_Application_Letter.setHtml(_translate("MainWindow4_Output", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:700; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:400;\">explanation for the apllication letter</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:400;\"><br /></p></body></html>"))
        self.textBrowser_Cheat_Sheet.setHtml(_translate("MainWindow4_Output", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:700; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:400;\">explanation for the cheat sheet</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:400;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:400;\"><br /></p></body></html>"))
        self.textBrowser_CV_Improvements.setHtml(_translate("MainWindow4_Output", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:700; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:400;\">explanation for the CV Improvements</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:400;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:400;\"><br /></p></body></html>"))
        self.checkBox_Application_letter.setText(_translate("MainWindow4_Output", "Application letter"))
        self.checkBox_Cheat_Sheet.setText(_translate("MainWindow4_Output", "Cheat Sheet"))
        self.checkBox_CV_Improvements.setText(_translate("MainWindow4_Output", "CV Improvements"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow4_Output = QtWidgets.QMainWindow()
    ui = Ui_MainWindow4_Output()
    ui.setupUi(MainWindow4_Output)
    MainWindow4_Output.show()
    sys.exit(app.exec())
